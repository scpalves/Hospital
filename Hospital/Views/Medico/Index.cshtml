@model IEnumerable<Hospital.Models.Medico>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Medicos Activos</h2>
<br />
<p>
    @Html.ActionLink("New Medico", "New", "Medico", null, new { @class = "btn btn-warning" })
    @Html.ActionLink("Médicos Inactivos", "MedicosInactivos", "Medico", null, new { @class = "btn btn-primary" })
    @Html.ActionLink("Todos", "AllMedicos", "Medico", null, new { @class = "btn btn-primary" })
</p>

<br />

@using (Html.BeginForm("Index", "Medico", FormMethod.Get))
{

    <div class="form-actions">
        <h4>Pesquisar Medico:</h4> @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
        <button type="submit" class="btn btn-primary">Pesquisar </button>

    </div>
}
<br />

    <table class="table table-responsive table-bordered table-condensed table-hover">
    <tr>
        <th>
            @Html.ActionLink("FirstName", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), SortBy = "FirstName", page = (ViewBag.Page == null ? "1" : ViewBag.Page), currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("LastName", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), SortBy = "LastName", page = (ViewBag.Page == null ? "1" : ViewBag.Page), currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), SortBy = "Email", page = (ViewBag.Page == null ? "1" : ViewBag.Page), currentFilter = ViewBag.CurrentFilter })

        </th>
        <th>
            @Html.ActionLink("Contact", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), SortBy = "Contact", page = (ViewBag.Page == null ? "1" : ViewBag.Page), currentFilter = ViewBag.CurrentFilter })

        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contact)
            </td>

            @Html.HiddenFor(modelItem => item.Status)

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Inativar Medico", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

@{
    double TotalPage = @ViewBag.TotalPages;
}

<ul class="pagination">
    @for (int i = 1; i <= TotalPage; i++)
    {

        if (i == ViewBag.Page)
        {
            <li class="active"> @Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "FirstName" : ViewBag.SortBy), Page = i })</li>
        }
        else
        {
            <li>
                @Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "FirstName" : ViewBag.SortBy), Page = i })
            </li>
        }

    }
</ul>